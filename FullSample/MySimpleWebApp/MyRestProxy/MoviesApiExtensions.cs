// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using Microsoft.Rest;
using MySimpleWebApp.MyRestProxy;

namespace MySimpleWebApp.MyRestProxy
{
    public static partial class MoviesApiExtensions
    {
        /// <param name='operations'>
        /// Reference to the MySimpleWebApp.MyRestProxy.IMoviesApi.
        /// </param>
        public static string GetEx(this IMoviesApi operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMoviesApi)s).GetExAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the MySimpleWebApp.MyRestProxy.IMoviesApi.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetExAsync(this IMoviesApi operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetExWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
        
        /// <param name='operations'>
        /// Reference to the MySimpleWebApp.MyRestProxy.IMoviesApi.
        /// </param>
        public static string GetList(this IMoviesApi operations)
        {
            return Task.Factory.StartNew((object s) => 
            {
                return ((IMoviesApi)s).GetListAsync();
            }
            , operations, CancellationToken.None, TaskCreationOptions.None, TaskScheduler.Default).Unwrap().GetAwaiter().GetResult();
        }
        
        /// <param name='operations'>
        /// Reference to the MySimpleWebApp.MyRestProxy.IMoviesApi.
        /// </param>
        /// <param name='cancellationToken'>
        /// Cancellation token.
        /// </param>
        public static async Task<string> GetListAsync(this IMoviesApi operations, CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            Microsoft.Rest.HttpOperationResponse<string> result = await operations.GetListWithOperationResponseAsync(cancellationToken).ConfigureAwait(false);
            return result.Body;
        }
    }
}
